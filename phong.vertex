#version 330 core
#define MAX_LIGHTS 10
uniform float time;

uniform vec3 camPosition;
uniform mat4 MVP;
uniform mat4 M;
uniform mat4 V;
uniform int numlights;
uniform struct Light{
	vec3 position;
	vec3 color;
}Lights[MAX_LIGHTS];

layout(location = 0)in vec3 position;
layout(location = 1)in vec2 uv;
layout(location = 2)in vec3 normal; 

out vec3 normal_world;
out vec3 lidir_world[MAX_LIGHTS];
out vec3 eyedir_world;
out vec2 uv_fragment;

void main()
{
	for(int i = 0;i < numlights;i++){
		lidir_world[i] = normalize(Lights[i].position - pos_world);
	}
	normal_world     = normalize(M * vec4(normal,1)).xyz;
	eyedir_world     = normalize(camPosition - position).xyz;
	uv_fragment      = uv; 
	gl_Position      = (MVP * vec4(pos_world,1)).xyz;
}



